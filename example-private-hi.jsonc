{
    "config.py->GlobalConfig": {
        // please checkout config.py for information
        "note": "example experiment",                   // in case you forget the purpose of this trainning session, write a note
        "env_name": "sr_tasks->hunter_invader",         // which environment, see ./MISSIONS/env_router.py
        "env_path": "MISSIONS.sr_tasks.multiagent.scenarios.hunter_invader",         // path of environment
        "draw_mode": "Img",                             // activate data plotting (Tensorboard is not used because I do not like it)
        "num_threads": "4",                            // run N parallel envs, a 'env' is refered to as a 'thread'
        "report_reward_interval": "64",                 // reporting interval
        "test_interval": "2048",                        // test every $test_interval episode
        "fold": "1",                                    // this 'folding' is designed for IPC efficiency, you can thank python GIL for such a strange design... 
        "seed": 8888,                                   // seed controls pytorch and numpy
        "backup_files": [                               // backup files, pack them up
            "example-private.jsonc", "ALGORITHM/conc", "MISSIONS/sr_tasks/multiagent"
        ],
        "device": "cuda:0",                             // choose from 'cpu' (no GPU), 'cuda' (auto select GPU), 'cuda:3' (manual select GPU) 
        // GPU memory is precious! assign multiple training process to a 'party', then they will share GPU memory 
        "gpu_party": "off"                              // default is 'off', 
    },


    "MISSIONS.sr_tasks.multiagent.scenarios.hunter_invader.py->ScenarioConfig": {
        "hunter_num": 15,
        "invader_num": 5,
        "render": true,
        "num_landmarks": 6,
        "TEAM_NAMES": [ //select team algorithm
            "ALGORITHM.script_ai.manual->IHDummyAlgorithmFoundation",
            "ALGORITHM.coop_space.reinforce_foundation->ReinforceAlgorithmFoundation",
        ]
    },
    "ALGORITHM.coop_space.reinforce_foundation.py->CoopAlgConfig": {
        "g_num": 3,                    // d_k
    },
    "ALGORITHM.script_ai.manual.py->CoopAlgConfig": {
    }
}