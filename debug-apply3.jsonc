{
    // --- Part1: config HMP core --- 
    "config.py->GlobalConfig": {
        "note": "z-test-qmix",// http://localhost:59547
        "env_name": "uhmap",
        "env_path": "MISSION.uhmap",
        // "heartbeat_on": "False",
        "draw_mode": "Img",
        "num_threads": 8,
        "report_reward_interval": 256,
        "test_interval": 5120,
        "test_epoch": 256,
        "interested_team": 0,
        "seed": 10098,
        "device": "cuda",
        "max_n_episode": 5000000,
        "fold": 1,
        "remote_server_ops": "curl -T \"LOCALFILE\" -u fuqingxu:clara \"http://cloud.fuqingxu.top:4080/remote.php/dav/files/fuqingxu/research/ProfileJsonHistory/REMOTEFILE\"",
        "backup_files": [
            "ALGORITHM/pymarl2_compat",
            "MISSION/uhmap"
        ]
    },


    // --- Part2: config MISSION --- 
    "MISSION.uhmap.uhmap_env_wrapper.py->ScenarioConfig": {
        "n_team1agent": 10,
        "n_team2agent": 10,
        "MaxEpisodeStep": 125,
        "StepGameTime": 0.5,
        "StateProvided": false,
        "render": false, // note: random seed has different impact on renderer and server
        "UElink2editor": false,
        "AutoPortOverride": true,
        "HeteAgents": true,
        "UnrealLevel": "UhmapLargeScale",
        "SubTaskSelection": "UhmapLargeScale",
        // "UhmapRenderExe": "./../../WindowsNoEditor/UHMP.exe",
        // "UhmapServerExe": "./../../WindowsServer/UHMPServer.exe",
        "UhmapRenderExe": "/home/hmp/fuqingxu/UHMP/Build/LinuxNoEditor/UHMP.sh",
        "UhmapServerExe": "/home/hmp/fuqingxu/UHMP/Build/LinuxServer/UHMPServer.sh",
        "TimeDilation": 64, // simulation time speed up, larger is faster
        "TEAM_NAMES": [
            "ALGORITHM.pymarl2_compat.pymarl2_compat->PymarlFoundation",
            "ALGORITHM.script_ai.uhmap_ls->DummyAlgorithmLinedAttack",
        ]
    },
    "MISSION.uhmap.SubTasks.UhmapLargeScaleConf.py->SubTaskConfig":{
        "agent_list": [
            { "team":0,  "tid":0,   "type":"RLA_UAV_Support", "init_fn_name":"init_air"      },
            { "team":0,  "tid":1,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":0,  "tid":2,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":0,  "tid":3,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":0,  "tid":4,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":0,  "tid":5,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":0,  "tid":6,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":0,  "tid":7,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":0,  "tid":8,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":0,  "tid":9,   "type":"RLA_UAV_Support", "init_fn_name":"init_air"      },

            { "team":1,  "tid":0,   "type":"RLA_UAV_Support", "init_fn_name":"init_air"      },
            { "team":1,  "tid":1,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":1,  "tid":2,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":1,  "tid":3,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":1,  "tid":4,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":1,  "tid":5,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":1,  "tid":6,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":1,  "tid":7,   "type":"RLA_CAR",         "init_fn_name":"init_ground"   },
            { "team":1,  "tid":8,   "type":"RLA_CAR_Laser",   "init_fn_name":"init_ground"   },
            { "team":1,  "tid":9,   "type":"RLA_UAV_Support", "init_fn_name":"init_air"      },
        ]
    },






    // --- Part3: config ALGORITHM 1/2 --- 
    "ALGORITHM.script_ai.uhmap_ls.py->DummyAlgConfig": {
        "reserve": ""
    },

    // --- Part3: config ALGORITHM 2/2 --- 
    "ALGORITHM.pymarl2_compat.pymarl2_compat.py->AlgorithmConfig": {
        "load_checkpoint": "True",
        "batch_size": 128,
        "use_shell": "mini_shell_uhmap",
        "pymarl_config_injection":{
            "controllers.my_n_controller.py->PymarlAlgorithmConfig":{
                "use_normalization": "True",
                "use_vae": "False",
            },
            "config.py->GlobalConfig":{
                "load_checkpoint": "True",
            }
        }
    }
}